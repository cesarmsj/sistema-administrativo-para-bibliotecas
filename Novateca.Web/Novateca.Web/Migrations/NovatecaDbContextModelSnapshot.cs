// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Novateca.Web.Models;

namespace Novateca.Web.Migrations
{
    [DbContext(typeof(NovatecaDbContext))]
    partial class NovatecaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Novateca.Web.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdBook")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorMain");

                    b.Property<string>("Authors");

                    b.Property<string>("Edition");

                    b.Property<string>("Locate");

                    b.Property<string>("PublishingCompany")
                        .IsRequired()
                        .HasColumnName("PublishingCompany")
                        .HasMaxLength(255);

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnName("Subtitle")
                        .HasMaxLength(20);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnName("Subject")
                        .HasMaxLength(20);

                    b.Property<string>("TitleMain")
                        .IsRequired()
                        .HasColumnName("TitleMain")
                        .HasMaxLength(20);

                    b.Property<int>("TotalPages");

                    b.Property<string>("URLEbook");

                    b.Property<string>("URLImage");

                    b.Property<int>("Year");

                    b.HasKey("BookID")
                        .HasName("IdBook");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Novateca.Web.Models.BookComment", b =>
                {
                    b.Property<int>("BookCommentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("Comment")
                        .HasMaxLength(100);

                    b.Property<int>("UserID");

                    b.HasKey("BookCommentID");

                    b.HasIndex("BookID");

                    b.HasIndex("UserID");

                    b.ToTable("BookComment");
                });

            modelBuilder.Entity("Novateca.Web.Models.BookLike", b =>
                {
                    b.Property<int>("BookLikeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID");

                    b.Property<int>("UserID");

                    b.HasKey("BookLikeID");

                    b.HasIndex("BookID");

                    b.HasIndex("UserID");

                    b.ToTable("BookLike");
                });

            modelBuilder.Entity("Novateca.Web.Models.FavoriteBook", b =>
                {
                    b.Property<int>("FavoriteBookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID");

                    b.Property<int>("UserID");

                    b.HasKey("FavoriteBookID");

                    b.HasIndex("BookID");

                    b.HasIndex("UserID");

                    b.ToTable("FavoriteBooks");
                });

            modelBuilder.Entity("Novateca.Web.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("Firstname")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("Lastname")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasMaxLength(255);

                    b.Property<string>("Profile");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasMaxLength(20);

                    b.HasKey("UserID")
                        .HasName("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Novateca.Web.Models.BookComment", b =>
                {
                    b.HasOne("Novateca.Web.Models.Book", "Book")
                        .WithMany("BookComments")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Novateca.Web.Models.User", "User")
                        .WithMany("BookComments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Novateca.Web.Models.BookLike", b =>
                {
                    b.HasOne("Novateca.Web.Models.Book", "Book")
                        .WithMany("BookLikes")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Novateca.Web.Models.User", "User")
                        .WithMany("BookLikes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Novateca.Web.Models.FavoriteBook", b =>
                {
                    b.HasOne("Novateca.Web.Models.Book", "Book")
                        .WithMany("FavoriteBooks")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Novateca.Web.Models.User", "User")
                        .WithMany("FavoriteBooks")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
